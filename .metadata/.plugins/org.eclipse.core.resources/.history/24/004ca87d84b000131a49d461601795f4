package esiea_bid;

import java.util.List;
import java.util.Observable;
import java.util.Observer;

public class CancelObserver implements Observer{
	 
	private BidState state;
	private List<Bid> listBid;
	private List<Offer> listOffer;
	public CancelObserver(BidState state, List<Bid> listBid, List<Offer> listOffer)
	{
		this.state = state;
		this.listBid = listBid;
		this.listOffer = listOffer;
	}
	
	@Override
	public void update(Observable state, Object arg1) {
		List<Alarm> listAlarm;
		System.out.println("Observeur activé");
		if(arg1.equals(BidState.CANCELED))
		{
			for (Offer offer : listOffer)
			{
				listAlarm = offer.getBuyer().getListAlarm();
			}
			System.out.println("Bid has been canceled");
		}
	}
}
